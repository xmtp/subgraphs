# ============ Generic - Snapshot Interfaces ============ #

interface SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @index
}

interface IntSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @index
    value: Int!
}

interface BigIntSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @index
    value: BigInt!
}

interface TimestampSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @index
    value: Timestamp!
}

interface StringSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @index
    value: String!
}

interface BooleanSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @index
    value: Boolean!
}

# ============ AppChainCaller - Snapshot Interfaces ============ #

interface AppChainCallerSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @index
    appChainCaller: AppChainCaller! @index
}

# ============ AppChainCaller - State Variable Snapshots ============ #

type AppChainBalanceSnapshot implements AppChainCallerSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @index
    appChainCaller: AppChainCaller! @index
    value: BigInt!
}

# ============ AppChainCaller - Lifetime Total Snapshots ============ #

type GroupMessagesSentSnapshot implements AppChainCallerSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @index
    payer: Payer! @index
    value: BigInt!
}

type IdentityUpdatesCreatedSnapshot implements AppChainCallerSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @index
    payer: Payer! @index
    value: BigInt!
}

type TotalGroupMessageTransactionFeesSnapshot implements AppChainCallerSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @index
    appChainCaller: AppChainCaller! @index
    value: BigInt!
}

type TotalIdentityUpdateTransactionFeesSnapshot implements AppChainCallerSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @index
    appChainCaller: AppChainCaller! @index
    value: BigInt!
}

type TotalTransactionFeesSnapshot implements AppChainCallerSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @index
    appChainCaller: AppChainCaller! @index
    value: BigInt!
}

# ============ AppChainCaller - Event Entities ============ #

type GroupMessage @entity(immutable: true) {
    id: ID! @unique
    groupMessageBroadcaster: GroupMessageBroadcaster! @index
    appChainCaller: AppChainCaller! @index
    groupId: Bytes!
    message: Bytes!
    sequenceId: BigInt!
    timestamp: Timestamp!
    transactionHash: String!
    logIndex: BigInt!
    transactionFee: BigInt!
}

type IdentityUpdate @entity(immutable: false) {
    id: ID! @unique
    identityUpdateBroadcaster: IdentityUpdateBroadcaster! @index
    appChainCaller: AppChainCaller! @index
    inboxId: Bytes!
    message: Bytes!
    sequenceId: BigInt!
    timestamp: Timestamp!
    transactionHash: String!
    logIndex: BigInt!
    transactionFee: BigInt!
}

# ============ AppChainCaller - Entity ============ #

type AppChainCaller @entity(immutable: false) {
    # Entity Properties
    id: ID! @unique
    lastUpdate: Timestamp!
    address: String! @unique
    groupMessageBroadcaster: GroupMessageBroadcaster! @index
    identityUpdateBroadcaster: IdentityUpdateBroadcaster! @index

    # State Variables (and snapshots)
    balance: BigInt!
    balanceSnapshots: [AppChainBalanceSnapshot!] @derivedFrom(field: "appChainCaller")

    # Lifetime Totals (and snapshots)
    groupMessagesSent: BigInt!
    groupMessagesSentSnapshots: [GroupMessagesSentSnapshot!] @derivedFrom(field: "appChainCaller")
    identityUpdatesCreated: BigInt!
    identityUpdatesCreatedSnapshots: [IdentityUpdatesCreatedSnapshot!] @derivedFrom(field: "appChainCaller")
    totalGroupMessageTransactionFees: BigInt!
    totalGroupMessageTransactionFeesSnapshots: [TotalGroupMessageTransactionFeesSnapshot!]
        @derivedFrom(field: "appChainCaller")
    totalIdentityUpdateTransactionFees: BigInt!
    totalIdentityUpdateTransactionFeesSnapshots: [TotalIdentityUpdateTransactionFeesSnapshot!]
        @derivedFrom(field: "appChainCaller")
    totalTransactionFees: BigInt!
    totalTransactionFeesSnapshots: [TotalTransactionFeesSnapshot!] @derivedFrom(field: "appChainCaller")

    # Event Entities
    groupMessages: [GroupMessage!] @derivedFrom(field: "appChainCaller")
    identityUpdates: [IdentityUpdate!] @derivedFrom(field: "appChainCaller")
}

# ============ GroupMessageBroadcaster - Snapshot Interfaces ============ #

interface GroupMessageBroadcasterSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @index
    groupMessageBroadcaster: GroupMessageBroadcaster! @index
}

# ============ GroupMessageBroadcaster - State Variable Snapshots ============ #

type PayerRegistryPausedSnapshot implements PayerRegistrySnapshotEntity & BooleanSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: Boolean!
}

type PayerRegistryTotalDepositsSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

type PayerRegistryTotalDebtSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

type PayerRegistryWithdrawLockPeriodSnapshot implements PayerRegistrySnapshotEntity & IntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: Int!
}

type PayerRegistryMinimumDepositSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

type PayerRegistrySettlerSnapshot implements PayerRegistrySnapshotEntity & StringSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: String!
}

type PayerRegistryFeeDistributorSnapshot implements PayerRegistrySnapshotEntity & StringSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: String!
}

# ============ GroupMessageBroadcaster - Computed Variables Snapshots ============ #

type PayerRegistryTotalWithdrawableSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

type PayerRegistryExcessSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

# ============ GroupMessageBroadcaster - Token Balance Snapshots ============ #

type PayerRegistryFeeTokenBalanceSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

# ============ GroupMessageBroadcaster - Aggregator Snapshots ============ #

type PayerRegistryTotalBalanceSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

type PayerRegistryTotalPendingWithdrawalsSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

# ============ GroupMessageBroadcaster - Lifetime Total Snapshots ============ #

type PayerRegistryTotalDepositedSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

type PayerRegistryTotalRepaidDebtSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

type PayerRegistryTotalIncurredDebtSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

type PayerRegistryTotalWithdrawnSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

type PayerRegistryTotalUsageSettledSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

type PayerRegistryTotalExcessTransferredSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: true) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payerRegistry: PayerRegistry! @index
    value: BigInt!
}

# ============ GroupMessageBroadcaster - Event Entities ============ #

type PayerRegistryExcessTransfer @entity(immutable: true) {
    id: ID! @unique
    payerRegistry: PayerRegistry! @index
    amount: BigInt!
    timestamp: Timestamp!
    transactionHash: String! @index
    logIndex: BigInt!
}

# ============ GroupMessageBroadcaster - Entity ============ #

type GroupMessageBroadcaster @entity(immutable: false) {
    # Entity Properties
    id: ID! @unique
    lastUpdate: Timestamp!

    # State Variable Mappings
    appChainCallers: [AppChainCaller!] @derivedFrom(field: "groupMessageBroadcaster")

    # State Variables (and snapshots)
    minPayloadSize: BigInt!
    minPayloadSizeSnapshots: [MinPayloadSizeSnapshot!] @derivedFrom(field: "groupMessageBroadcaster")
    maxPayloadSize: BigInt!
    maxPayloadSizeSnapshots: [MaxPayloadSizeSnapshot!] @derivedFrom(field: "groupMessageBroadcaster")
    sequenceId: BigInt!
    sequenceIdSnapshots: [SequenceIdSnapshot!] @derivedFrom(field: "groupMessageBroadcaster")
    paused: Boolean!
    pausedSnapshots: [PausedSnapshot!] @derivedFrom(field: "groupMessageBroadcaster")

    # Token Balances (and snapshots)
    feeTokenBalance: BigInt!
    feeTokenBalanceSnapshots: [PayerRegistryFeeTokenBalanceSnapshot!] @derivedFrom(field: "payerRegistry")

    # Computed Variables (and snapshots)
    totalWithdrawable: BigInt!
    totalWithdrawableSnapshots: [PayerRegistryTotalWithdrawableSnapshot!] @derivedFrom(field: "payerRegistry")
    excess: BigInt!
    excessSnapshots: [PayerRegistryExcessSnapshot!] @derivedFrom(field: "payerRegistry")

    # Aggregators (and snapshots)
    totalBalances: BigInt!
    totalBalancesSnapshots: [PayerRegistryTotalBalanceSnapshot!] @derivedFrom(field: "payerRegistry")
    totalPendingWithdrawals: BigInt!
    totalPendingWithdrawalsSnapshots: [PayerRegistryTotalPendingWithdrawalsSnapshot!]
        @derivedFrom(field: "payerRegistry")

    # Lifetime Totals (and snapshots)
    totalDeposited: BigInt!
    totalDepositedSnapshots: [PayerRegistryTotalDepositedSnapshot!] @derivedFrom(field: "payerRegistry")
    totalIncurredDebt: BigInt!
    totalIncurredDebtSnapshots: [PayerRegistryTotalIncurredDebtSnapshot!] @derivedFrom(field: "payerRegistry")
    totalRepaidDebt: BigInt!
    totalRepaidDebtSnapshots: [PayerRegistryTotalRepaidDebtSnapshot!] @derivedFrom(field: "payerRegistry")
    totalWithdrawn: BigInt!
    totalWithdrawnSnapshots: [PayerRegistryTotalWithdrawnSnapshot!] @derivedFrom(field: "payerRegistry")
    totalUsageSettled: BigInt!
    totalUsageSettledSnapshots: [PayerRegistryTotalUsageSettledSnapshot!] @derivedFrom(field: "payerRegistry")
    totalExcessTransferred: BigInt!
    totalExcessTransferredSnapshots: [PayerRegistryTotalExcessTransferredSnapshot!] @derivedFrom(field: "payerRegistry")

    # Event Entities
    deposits: [PayerRegistryDeposit!] @derivedFrom(field: "payerRegistry")
    withdrawals: [PayerRegistryWithdrawal!] @derivedFrom(field: "payerRegistry")
    batchUsageSettlements: [PayerRegistryBatchUsageSettlement!] @derivedFrom(field: "payerRegistry")
    excessTransfers: [PayerRegistryExcessTransfer!] @derivedFrom(field: "payerRegistry")
}
