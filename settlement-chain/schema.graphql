# ============ Generic - Snapshot Interfaces ============ #

interface SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
}

interface IntSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: Int!
}

interface BigIntSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

interface TimestampSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: Timestamp!
}

interface StringSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: String!
}

interface BooleanSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: Boolean!
}

# ============ Payer - Snapshot Interfaces ============ #

interface PayerSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payer: Payer! @index
}

# ============ Payer - State Variable Snapshots ============ #

type PayerRegistryBalanceSnapshot implements PayerSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payer: Payer! @index
    value: BigInt!
}

# ============ Payer - Lifetime Total Snapshots ============ #

type PayerRegistryDepositedSnapshot implements PayerSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payer: Payer! @index
    value: BigInt!
}

type PayerRegistryIncurredDebtSnapshot implements PayerSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payer: Payer! @index
    value: BigInt!
}

type PayerRegistryRepaidDebtSnapshot implements PayerSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payer: Payer! @index
    value: BigInt!
}

type PayerRegistryWithdrawnSnapshot implements PayerSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payer: Payer! @index
    value: BigInt!
}

type PayerRegistryUsageSettledSnapshot implements PayerSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    payer: Payer! @index
    value: BigInt!
}

# ============ Payer - Event Entities ============ #

type PayerRegistryDeposit @entity(immutable: true) {
    id: ID! @unique
    payer: Payer! @index
    amount: BigInt!
    timestamp: Timestamp!
    transactionHash: String!
    logIndex: BigInt!
}

type PayerRegistryWithdrawal @entity(immutable: false) {
    id: ID! @unique
    payer: Payer! @index
    amount: BigInt!
    withdrawableTimestamp: Timestamp!
    requestTimestamp: Timestamp!
    requestTransactionHash: String!
    requestLogIndex: BigInt!
    cancelTimestamp: Timestamp
    cancelTransactionHash: String
    cancelLogIndex: BigInt
    finalizeTimestamp: Timestamp
    finalizeTransactionHash: String
    finalizeLogIndex: BigInt
}

type PayerRegistryUsageSettlement @entity(immutable: true) {
    id: ID! @unique
    payer: Payer! @index
    amount: BigInt!
    batchUsageSettlement: PayerRegistryBatchUsageSettlement! @index
    logIndex: BigInt!
}

# ============ Payer - Entity ============ #

type Payer @entity(immutable: false) {
    # Entity Properties
    id: ID! @unique
    lastUpdate: Timestamp!
    address: String! @unique

    # State Variables (and snapshots)
    balance: BigInt!
    balanceSnapshots: [PayerRegistryBalanceSnapshot!] @derivedFrom(field: "payer")
    pendingWithdrawal: PayerRegistryWithdrawal

    # Lifetime Totals (and snapshots)
    deposited: BigInt!
    depositedSnapshots: [PayerRegistryDepositedSnapshot!] @derivedFrom(field: "payer")
    incurredDebt: BigInt!
    incurredDebtSnapshots: [PayerRegistryIncurredDebtSnapshot!] @derivedFrom(field: "payer")
    repaidDebt: BigInt!
    repaidDebtSnapshots: [PayerRegistryRepaidDebtSnapshot!] @derivedFrom(field: "payer")
    withdrawn: BigInt!
    withdrawnSnapshots: [PayerRegistryWithdrawnSnapshot!] @derivedFrom(field: "payer")
    usageSettled: BigInt!
    usageSettledSnapshots: [PayerRegistryUsageSettledSnapshot!] @derivedFrom(field: "payer")

    # Event Entities
    deposits: [PayerRegistryDeposit!] @derivedFrom(field: "payer")
    withdrawals: [PayerRegistryWithdrawal!] @derivedFrom(field: "payer")
    usageSettlements: [PayerRegistryUsageSettlement!] @derivedFrom(field: "payer")
}

# ============ PayerRegistry - Snapshot Interfaces ============ #

interface PayerRegistrySnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
}

# ============ PayerRegistry - State Variable Snapshots ============ #

type PayerRegistryImplementationSnapshot implements PayerRegistrySnapshotEntity & StringSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: String!
}

type PayerRegistryPausedSnapshot implements PayerRegistrySnapshotEntity & BooleanSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: Boolean!
}

type PayerRegistryTotalDepositsSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

type PayerRegistryTotalDebtSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

type PayerRegistryWithdrawLockPeriodSnapshot implements PayerRegistrySnapshotEntity & IntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: Int!
}

type PayerRegistryMinimumDepositSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

type PayerRegistrySettlerSnapshot implements PayerRegistrySnapshotEntity & StringSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: String!
}

type PayerRegistryFeeDistributorSnapshot implements PayerRegistrySnapshotEntity & StringSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: String!
}

# ============ PayerRegistry - Computed Variables Snapshots ============ #

type PayerRegistryTotalWithdrawableSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

type PayerRegistryExcessSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

# ============ PayerRegistry - Aggregator Snapshots ============ #

type PayerRegistryTotalBalanceSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

type PayerRegistryTotalPendingWithdrawalsSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

# ============ PayerRegistry - Lifetime Total Snapshots ============ #

type PayerRegistryTotalDepositedSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

type PayerRegistryTotalRepaidDebtSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

type PayerRegistryTotalIncurredDebtSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

type PayerRegistryTotalWithdrawnSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

type PayerRegistryTotalUsageSettledSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

type PayerRegistryTotalExcessTransferredSnapshot implements PayerRegistrySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

# ============ PayerRegistry - Event Entities ============ #

type PayerRegistryBatchUsageSettlement @entity(immutable: false) {
    id: ID! @unique
    usageSettlements: [PayerRegistryUsageSettlement!] @derivedFrom(field: "batchUsageSettlement")
    amount: BigInt!
    timestamp: Timestamp!
    transactionHash: String! @index
}

type PayerRegistryExcessTransfer @entity(immutable: true) {
    id: ID! @unique
    amount: BigInt!
    timestamp: Timestamp!
    transactionHash: String! @index
    logIndex: BigInt!
}

# ============ PayerRegistry - Entity ============ #

type PayerRegistry @entity(immutable: false) {
    # Entity Properties
    id: ID! @unique
    lastUpdate: Timestamp!
    address: String! @unique

    # State Variables (and snapshots)
    implementation: String!
    paused: Boolean!
    totalDeposits: BigInt!
    totalDebt: BigInt!
    withdrawLockPeriod: Int!
    minimumDeposit: BigInt!
    settler: String!
    feeDistributor: String!

    # Computed Variables (and snapshots)
    totalWithdrawable: BigInt!
    excess: BigInt!

    # Aggregators (and snapshots)
    totalBalances: BigInt!
    totalPendingWithdrawals: BigInt!

    # Lifetime Totals (and snapshots)
    totalDeposited: BigInt!
    totalIncurredDebt: BigInt!
    totalRepaidDebt: BigInt!
    totalWithdrawn: BigInt!
    totalUsageSettled: BigInt!
    totalExcessTransferred: BigInt!
}

# ============ Account - Snapshot Interfaces ============ #

interface AccountSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    account: Account! @index
}

# ============ Account - State Variable Snapshots ============ #

type FeeTokenBalanceSnapshot implements AccountSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    account: Account! @index
    value: BigInt!
}

type UnderlyingFeeTokenBalanceSnapshot implements AccountSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    account: Account! @index
    value: BigInt!
}

# ============ Account - Lifetime Total Snapshots ============ #

type GatewayWithdrawalsReceivedSnapshot implements AccountSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    account: Account! @index
    value: BigInt!
}

type FeeTokenReceivedSnapshot implements AccountSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp!
    account: Account!
    value: BigInt!
}

type FeeTokenSentSnapshot implements AccountSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp!
    account: Account!
    value: BigInt!
}

type FeeTokenMintedSnapshot implements AccountSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp!
    account: Account!
    value: BigInt!
}

type FeeTokenBurnedSnapshot implements AccountSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp!
    account: Account!
    value: BigInt!
}

# ============ Account - Event Entities ============ #

type GatewayReceivedWithdrawal @entity(immutable: true) {
    id: ID! @unique
    recipient: Account! @index
    amount: BigInt!
    timestamp: Timestamp!
    transactionHash: String!
    logIndex: BigInt!
}

type FeeTokenTransfer @entity(immutable: true) {
    id: ID! @unique
    sender: Account!
    recipient: Account!
    amount: BigInt!
    timestamp: Timestamp!
    transactionHash: String!
    logIndex: BigInt!
}

# ============ Account - Entity ============ #

type Account @entity(immutable: false) {
    # Entity Properties
    id: ID! @unique
    lastUpdate: Timestamp!
    address: String! @unique

    # State Variables (and snapshots)
    feeTokenBalance: BigInt!
    feeTokenBalanceSnapshots: [FeeTokenBalanceSnapshot!] @derivedFrom(field: "account")
    underlyingFeeTokenBalance: BigInt!
    underlyingFeeTokenBalanceSnapshots: [UnderlyingFeeTokenBalanceSnapshot!] @derivedFrom(field: "account")

    # Lifetime Totals (and snapshots)
    gatewayWithdrawalsReceived: BigInt!
    gatewayWithdrawalsReceivedSnapshots: [GatewayWithdrawalsReceivedSnapshot!] @derivedFrom(field: "account")
    feeTokenReceived: BigInt!
    feeTokenReceivedSnapshots: [FeeTokenReceivedSnapshot!] @derivedFrom(field: "account")
    feeTokenSent: BigInt!
    feeTokenSentSnapshots: [FeeTokenSentSnapshot!] @derivedFrom(field: "account")
    feeTokenMinted: BigInt!
    feeTokenMintedSnapshots: [FeeTokenMintedSnapshot!] @derivedFrom(field: "account")
    feeTokenBurned: BigInt!
    feeTokenBurnedSnapshots: [FeeTokenBurnedSnapshot!] @derivedFrom(field: "account")

    # Event Entities
    gatewayReceivedWithdrawals: [GatewayReceivedWithdrawal!] @derivedFrom(field: "recipient")
    feeTokenTransfersTo: [FeeTokenTransfer!] @derivedFrom(field: "recipient")
    feeTokenTransfersFrom: [FeeTokenTransfer!] @derivedFrom(field: "sender")
}

# ============ SettlementChainGateway - Snapshot Interfaces ============ #

interface GatewaySnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
}

# ============ SettlementChainGateway - State Variable Snapshots ============ #

type GatewayImplementationSnapshot implements GatewaySnapshotEntity & StringSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: String!
}

type GatewayPausedSnapshot implements GatewaySnapshotEntity & BooleanSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: Boolean!
}

# ============ SettlementChainGateway - Lifetime Total Snapshots ============ #

type GatewayTotalWithdrawalsReceivedSnapshot implements GatewaySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

type GatewayTotalDepositedSnapshot implements GatewaySnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

# ============ SettlementChainGateway Inbox - Snapshot Interfaces ============ #

interface GatewayInboxSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    inbox: GatewayInbox! @index
}

# ============ SettlementChainGateway Inbox - State Variable Snapshots ============ #

type GatewayInboxAddressSnapshot implements GatewayInboxSnapshotEntity & StringSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    inbox: GatewayInbox! @index
    value: String!
}

# ============ SettlementChainGateway Inbox - Entity ============ #

type GatewayInbox @entity(immutable: false) {
    id: ID! @unique
    lastUpdate: Timestamp!
    chainId: BigInt! @index
    address: String! @index
    addressSnapshots: [GatewayInboxAddressSnapshot!] @derivedFrom(field: "inbox")
}

# ============ SettlementChainGateway - Event Entities ============ #

type ParameterSend @entity(immutable: true) {
    id: ID! @unique
    keys: [String!]!
    chainId: BigInt! @index
    messageNumber: BigInt! @index
    timestamp: Timestamp!
    transactionHash: String!
    logIndex: BigInt!
}

type GatewayDeposit @entity(immutable: true) {
    id: ID! @unique
    recipient: String! @index
    amount: BigInt!
    chainId: BigInt! @index
    messageNumber: BigInt! @index
    timestamp: Timestamp!
    transactionHash: String!
    logIndex: BigInt!
}

# ============ SettlementChainGateway - Entity ============ #

type SettlementChainGateway @entity(immutable: false) {
    # Entity Properties
    id: ID! @unique
    lastUpdate: Timestamp!
    address: String! @unique

    # State Variable Mappings
    implementation: String!
    paused: Boolean!

    # Lifetime Totals (and snapshots)
    totalWithdrawalsReceived: BigInt!
    totalDeposited: BigInt!
}

# ============ SettlementChainParameterRegistry Parameter - Snapshot Interfaces ============ #

interface ParameterSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    parameter: Parameter! @index
}

# ============ SettlementChainParameterRegistry Parameter - State Variable Snapshots ============ #

type ParameterValueSnapshot implements ParameterSnapshotEntity & StringSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    parameter: Parameter! @index
    value: String!
}

# ============ SettlementChainParameterRegistry Parameter - Entity ============ #

type Parameter @entity(immutable: false) {
    id: ID! @unique
    lastUpdate: Timestamp!
    key: String! @unique @index
    value: String!
    valueSnapshot: ParameterValueSnapshot! @derivedFrom(field: "parameter")
}

# ============ SettlementChainParameterRegistry - Snapshot Interfaces ============ #

interface ParameterRegistrySnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
}

# ============ SettlementChainParameterRegistry - State Variable Snapshots ============ #

type ParameterRegistryImplementationSnapshot implements ParameterRegistrySnapshotEntity & StringSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: String!
}

# ============ SettlementChainParameterRegistry - Entity ============ #

type SettlementChainParameterRegistry @entity(immutable: false) {
    # Entity Properties
    id: ID! @unique
    lastUpdate: Timestamp!
    address: String! @unique

    # State Variable Mappings
    implementation: String!
}

# ============ FeeToken - Snapshot Interfaces ============ #

interface FeeTokenSnapshotEntity implements SnapshotEntity {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
}

# ============ FeeToken - State Variable Snapshots ============ #

type FeeTokenImplementationSnapshot implements FeeTokenSnapshotEntity & StringSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: String!
}

type FeeTokenTotalSupplySnapshot implements FeeTokenSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

# ============ FeeToken - Aggregator Snapshots ============ #

type FeeTokenHoldersSnapshot implements FeeTokenSnapshotEntity & IntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: Int!
}

# ============ FeeToken - Lifetime Total Snapshots ============ #

type FeeTokenTotalTransferredSnapshot implements FeeTokenSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

type FeeTokenTotalMintedSnapshot implements FeeTokenSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

type FeeTokenTotalBurnedSnapshot implements FeeTokenSnapshotEntity & BigIntSnapshotEntity & SnapshotEntity
    @entity(immutable: false) {
    id: ID! @unique
    timestamp: Timestamp! @unique @index
    value: BigInt!
}

# ============ FeeToken - Entity ============ #

type FeeToken @entity(immutable: false) {
    # Entity Properties
    id: ID! @unique
    lastUpdate: Timestamp!
    address: String! @unique

    # State Variables (and snapshots)
    implementation: String!
    totalSupply: BigInt!

    # Aggregators (and snapshots)
    holders: Int!

    # Lifetime Totals (and snapshots)
    totalTransferred: BigInt!
    totalMinted: BigInt!
    totalBurned: BigInt!
}
