# XMTP Payer Portal - XMTP Appchain (XMTP Sepolia) Schema

enum MessageType {
  GROUP_MESSAGE
  IDENTITY_UPDATE
}

enum BridgeStatus {
  PENDING
  CONFIRMED # once confirmed, fetch L2 tx hash from sequencer
}

type Message @entity {
  id: ID! # txHash-logIndex
  type: MessageType!
  sender: Bytes!
  groupId: Bytes # For group messages
  inboxId: Bytes # For identity updates
  sequenceId: BigInt!
  # @note: is getting the length of the message param suitable for determining message size in bytes?
  messageSizeBytes: BigInt! # event.params.message.length
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  logIndex: BigInt!
  dailyStats: DailyPayerMessageStats
}

# Per-payer message statistics (all-time)
# @note: are nodes exposing any redundant data that would require this to be updated?
type MessageStats @entity {
  id: ID! # payer address
  payer: Bytes!
  totalMessages: BigInt!
  totalGroupMessages: BigInt!
  totalIdentityUpdates: BigInt!
  totalCost: BigInt!
  lastMessageAt: BigInt!
  firstMessageAt: BigInt!
  messages: [Message!]! @derivedFrom(field: "sender")
}

type BridgeTransaction @entity {
  id: ID! # txHash-logIndex for originating transaction
  payer: Bytes!
  amount: BigInt!
  status: BridgeStatus!
  sourceTxHash: Bytes!
  messageNum: BigInt!
  initiatedAt: BigInt!
  sourceBlockNumber: BigInt!
}

# @note: if nodes are exposing total message count, are getting message stats from group and identity contract events necessary?
# Per-payer daily message statistics
type DailyPayerMessageStats @entity {
  id: ID! # payerAddress-YYYY-MM-DD
  payer: Bytes!
  date: String! # YYYY-MM-DD
  messageCount: BigInt!
  totalCost: BigInt!
  averageCostPerMessage: BigInt!
  totalGroupMessages: BigInt!
  totalIdentityUpdates: BigInt!
  messages: [Message!]! @derivedFrom(field: "dailyStats")
}
